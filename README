TASK_UNINTERRUPTIBLE
	task block in uninterruptible state, which conn't be wake up by signal.

	wait_event

	make task wait in uninterruptible state, the `kill -s SIGUSR1 pid` will do nothing only for recode the signal.
	and dispatch the signal after the task wakeup from the wait_event.
TASK_INTERRUPTIBLE
	task block in interruptible state, which can be wake up by signal

	wait_event_interruptible

	make task wait in interruptible state, so the process can be terminat by `kill -s SIGUSR1 pid` signal

	the wait_event_interruptible will be wakeup by the signal, and the flag is zero.

	```
	[  161.193160] my read called: before wait event interruptible: 131072 13 flag: 00000000a5653654 0
	[  181.584961] my read called: wakeuped: 131072 13 flag: 00000000a5653654 0
	```

restart syscall:

```
#include <unistd.h>
#include <stdio.h>
#include <signal.h>
#include <string.h>
#define	BUFFSIZE	4096

void handle(int id)
{
	printf("handle signal: %d", id);
}

int
main(void)
{
	int		n;
	char	buf[BUFFSIZE];

	struct sigaction action;
	struct sigaction old_action;
	memset(&action, sizeof(struct sigaction), 0);
	action.sa_handler = handle;
	action.sa_flags |= SA_RESTART;
	if (sigaction(SIGUSR1, &action, &old_action)) {
		perror("sigaction error: ");
	}



	while ((n = read(STDIN_FILENO, buf, BUFFSIZE)) > 0)
		if (write(STDOUT_FILENO, buf, n) != n)
			perror("write error");

	if (n < 0)
		perror("read error");

	if (sigaction(SIGUSR1, &old_action, &action)) {
		perror("sigaction error: ");
	}
	return 0;
}
```

set SA_RESTART of sa_flags, call make a break system call be restarted while the signal catched.

```
kill -SIGUSR1 pid
```

```
[13289.739229] my open called
[13289.739795] pid: 20144, my read called: before wait event interruptible: 4096 0 flag: 0000000032448224 0
[13298.125057] wake up by signal, return -ERESTARTSYS.
[13298.125628] pid: 20144, my read called: before wait event interruptible: 4096 0 flag: 0000000032448224 0
[13309.804204] wake up by signal, return -ERESTARTSYS.
[13309.804352] pid: 20144, my read called: before wait event interruptible: 4096 0 flag: 0000000032448224 0
```

system call of read be called while receive SIGUSR1ã€‚