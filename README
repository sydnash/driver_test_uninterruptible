TASK_UNINTERRUPTIBLE
	task block in uninterruptible state, which conn't be wake up by signal.

	wait_event

	make task wait in uninterruptible state, the `kill -s SIGUSR1 pid` will do nothing only for recode the signal.
	and dispatch the signal after the task wakeup from the wait_event.
TASK_INTERRUPTIBLE
	task block in interruptible state, which can be wake up by signal

	wait_event_interruptible

	make task wait in interruptible state, so the process can be terminat by `kill -s SIGUSR1 pid` signal

	the wait_event_interruptible will be wakeup by the signal, and the flag is zero.

	```
	[  161.193160] my read called: before wait event interruptible: 131072 13 flag: 00000000a5653654 0
	[  181.584961] my read called: wakeuped: 131072 13 flag: 00000000a5653654 0
	```

restart syscall:

set SA_RESTART of sa_flags, call make a break system call be restarted while the signal catched.

```
kill -SIGUSR1 pid
```

```
[13289.739229] my open called
[13289.739795] pid: 20144, my read called: before wait event interruptible: 4096 0 flag: 0000000032448224 0
[13298.125057] wake up by signal, return -ERESTARTSYS.
[13298.125628] pid: 20144, my read called: before wait event interruptible: 4096 0 flag: 0000000032448224 0
[13309.804204] wake up by signal, return -ERESTARTSYS.
[13309.804352] pid: 20144, my read called: before wait event interruptible: 4096 0 flag: 0000000032448224 0
```

system call of read be called while receive SIGUSR1ã€‚

# test

## uninterruptible
```
make build
make main
sudo insmod ktest_hello.ko can_interruptible=0
./main < /dev/ktest_hello0

# after this, ctl-c will not work.
# start another terminal and 

echo 1 > /dev/ktest_hello0

```

## interruptible without restart syscall
```
make build
main main
sudo insmod ktest_hello.ko can_interruptible=1
./main < /dev/ktest_hello0

# after this, ctl-c or send signal, will exit

kill -s SIGUSR1 35898 # this will see: read error: Interrupted system call

```

## interruptible with restart syscall

````
make build
main main
sudo insmod ktest_hello.ko can_interruptible=1
./main 1 < /dev/ktest_hello0

# send signal will not exit and dmesg will see driver read has been recalled.
kill -s SIGUSR1 36170

```

```
[62211.997935] wake up by signal, return -ERESTARTSYS.
[62211.998543] pid: 36170, my read called: before wait event interruptible: 4096 0 flag: 00000000f5ec851a 0
[62277.164885] wake up by signal, return -ERESTARTSYS.
[62277.165282] pid: 36170, my read called: before wait event interruptible: 4096 0 flag: 00000000f5ec851a 0
```